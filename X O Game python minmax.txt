import math


def print_board(board):
    for i  in range(0,9,3):
        print(board[i], board[i+1], board[i+2])
        print()


def check_winner(board):
    wins = [(0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6)]
    for a,b,c in wins:
        if board[a]==board[b]==board[c] and board[a]!="-":
            return board[a]
    if "-" not in board:
        return "tie"
    return None


def minmax(board, is_max):
    winner = check_winner(board)
    if winner == "X":
        return 1
    elif winner == "O":
        return -1
    elif winner == "tie":
        return 0
    if is_max:
        best_score = -math.inf
        for i  in range(9):
            if board[i]=="-":
                board[i]="X"
                score=minmax(board, False)
                board[i]="-"
                best_score=max(best_score, score)
        return best_score
    else:
        best_score=math.inf
        for i  in range(9):
            if board[i]=="-":
                board[i]="O"
                score=minmax(board, True)
                board[i]="-"
                best_score=min(best_score, score)
        return best_score


def best_move_minmax(board):
    best_score=-math.inf
    move= None
    for i in range(9):
        if board[i]=="-":
            board[i]="X"
            score=minmax(board,False)
            board[i]="-"
            if score> best_score:
                best_score=score
                move=i
    return move


def main():
    board=["-"for _ in range(9)] #board to play x o as a list
    current_player="O"
    print("welcome to tic-tac-toe")
    print("the cells are numbered from 0 to 8 as follows")
    print("0 1 2")
    print("3 4 5")
    print("6 7 8")
    while True:
        print_board(board)
        result = check_winner(board)
        if result != None:
            if result == "tie":
                print("it's a tie")
                break
            else:
                print(f"the winner is {result}")
        if current_player == "O":
            move = int(input("enter the cell number: "))
            if board[move] != "-":
                print("cell is nor empty")
                continue
            else:
                board[move]="O"
                current_player="X"
        else:
            move=best_move_minmax(board)
            board[move]="X"
            current_player="O"
if __name__=="__main__":
    main()
